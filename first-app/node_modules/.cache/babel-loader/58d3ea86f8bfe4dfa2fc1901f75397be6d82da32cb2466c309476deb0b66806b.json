{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Udemy-react\\\\first-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ExpenseItem from \"./Item/ExpenseItem\";\nimport Card from \"../Card/Card\";\nimport ExpensesFilter from \"./Filter/ExpensesFilter\";\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\n  const data = props.data;\n  const filteredData = data.filter(item => item.date.getFullYear().toString() === filteredYear);\n  const allYearsOptions = [\"2019\", \"2020\", \"2021\", \"2022\"];\n  let hiddenYears = allYearsOptions.filter(item => item !== filteredYear);\n  hiddenYears = hiddenYears.map(item => `${item}`).join(', ');\n  const yearSelectHandler = selectedYear => {\n    setfilteredYear(selectedYear);\n  };\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No items found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 27\n  }, this);\n  if (filteredData.length > 0) {\n    expensesContent = filteredData.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      year: filteredYear,\n      onYearSelect: yearSelectHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data for years \", hiddenYears, \" are hidden.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: expensesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"rYY4Le6vk3MnakkLcU6U5Dv1ulY=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setfilteredYear","data","filteredData","filter","item","date","getFullYear","toString","allYearsOptions","hiddenYears","map","join","yearSelectHandler","selectedYear","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","title","amount","id","className","year","onYearSelect","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Udemy-react/first-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./Item/ExpenseItem\";\r\nimport Card from \"../Card/Card\";\r\nimport ExpensesFilter from \"./Filter/ExpensesFilter\";\r\n\r\nimport './Expenses.css';\r\n\r\nfunction Expenses (props) {\r\n\r\n    const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n\r\n    const data = props.data;\r\n    \r\n    const filteredData = data.filter(item => item.date.getFullYear().toString() === filteredYear);\r\n\r\n    const allYearsOptions = [\"2019\",\"2020\",\"2021\",\"2022\"];\r\n    let hiddenYears = allYearsOptions.filter(item => item !== filteredYear);\r\n    hiddenYears = hiddenYears.map((item) => `${item}`).join(', ');\r\n\r\n    const yearSelectHandler = selectedYear => {\r\n        setfilteredYear(selectedYear);\r\n    }\r\n\r\n    let expensesContent = <p>No items found.</p>;\r\n\r\n    if (filteredData.length > 0) {\r\n        expensesContent = filteredData.map(\r\n            item => (<ExpenseItem key={item.id}title={item.title} amount={item.amount} date={item.date}/>)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <ExpensesFilter year={filteredYear} onYearSelect={yearSelectHandler}/>\r\n            <p>Data for years {hiddenYears} are hidden.</p>\r\n            <Card>\r\n                {expensesContent}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,cAAc,MAAM,yBAAyB;AAEpD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAEC,KAAK,EAAE;EAAAC,EAAA;EAEtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMW,IAAI,GAAGJ,KAAK,CAACI,IAAI;EAEvB,MAAMC,YAAY,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKR,YAAY,CAAC;EAE7F,MAAMS,eAAe,GAAG,CAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,CAAC;EACrD,IAAIC,WAAW,GAAGD,eAAe,CAACL,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKL,YAAY,CAAC;EACvEU,WAAW,GAAGA,WAAW,CAACC,GAAG,CAAEN,IAAI,IAAM,GAAEA,IAAK,EAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAAC;EAE7D,MAAMC,iBAAiB,GAAGC,YAAY,IAAI;IACtCb,eAAe,CAACa,YAAY,CAAC;EACjC,CAAC;EAED,IAAIC,eAAe,gBAAGnB,OAAA;IAAAoB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;EAE5C,IAAIjB,YAAY,CAACkB,MAAM,GAAG,CAAC,EAAE;IACzBN,eAAe,GAAGZ,YAAY,CAACQ,GAAG,CAC9BN,IAAI,iBAAKT,OAAA,CAACJ,WAAW;MAAc8B,KAAK,EAAEjB,IAAI,CAACiB,KAAM;MAACC,MAAM,EAAElB,IAAI,CAACkB,MAAO;MAACjB,IAAI,EAAED,IAAI,CAACC;IAAK,GAAhED,IAAI,CAACmB,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAA4D,CACjG;EACL;EAEA,oBACIxB,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAAAT,QAAA,gBACrBpB,OAAA,CAACF,cAAc;MAACgC,IAAI,EAAE1B,YAAa;MAAC2B,YAAY,EAAEd;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtExB,OAAA;MAAAoB,QAAA,GAAG,iBAAe,EAACN,WAAW,EAAC,cAAY;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC/CxB,OAAA,CAACH,IAAI;MAAAuB,QAAA,EACAD;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd;AAACrB,EAAA,CAjCQF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}